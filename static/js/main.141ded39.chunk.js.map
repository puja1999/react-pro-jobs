{"version":3,"sources":["components/FetchJobs.jsx","components/DisplayJob.jsx","components/JobsPagination.jsx","components/SearchJob.jsx","components/HomeComp.jsx","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","DisplayJob","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchJob","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","HomeComp","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","FetchJobs","Container","param","target","prevParams","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.141ded39.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ACTIONS = { // inorder to define all of our actions, we are defining const variable called ACTIONS, which is gonna set to an object, which defines our actions, so that  we can reference them later \r\n  MAKE_REQUEST: 'make-request', // inside of useFetchJobs, we have these things, we can do, like making request, \r\n  GET_DATA: 'get-data', // after finishing request, getting data from that request,\r\n  ERROR: 'error', // for error, \r\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\n\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json' // jobs API\r\n\r\nfunction reducer(state, action) { //dispatch whatever we passed to, will populated in action variable, and state is the current state of application\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] } // if loading to true, then jobs gonna be set to empty array\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs } // we are gonna pass the jobs, on the payload of actions\r\n    case ACTIONS.ERROR:\r\n      return { ...state, loading: false, error: action.payload.error, jobs: [] } // passing error object, and clear out jobs if we have in here\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage }\r\n    default:\r\n      return state // returing current state\r\n  }\r\n}\r\n\r\nexport default function FetchJobs(params, page) { // we are using useReducer, to handle all the diff state inside of useFetchJobs\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true }) // taking reducer function, which is defined above, gets called everytime we call dispatch, \r\n\r\n  useEffect(() => { // using useEffect to run code again, anytime we change the page,or params\r\n    const cancelToken1 = axios.CancelToken.source()\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST })\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken1.token,\r\n      params: { markdown: true, page: page, ...params }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })  // listing jobs\r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n    })\r\n\r\n    const cancelToken2 = axios.CancelToken.source()\r\n    axios.get(BASE_URL, {\r\n      cancelToken: cancelToken2.token,\r\n      params: { markdown: true, page: page + 1, ...params }\r\n    }).then(res => {\r\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return\r\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \r\n    })\r\n\r\n    return () => {\r\n      cancelToken1.cancel()\r\n      cancelToken2.cancel()\r\n    }\r\n  }, [params, page]) // whenever the params or page change, we want to re-run the use Effect hook\r\n  \r\n  return state\r\n}","import React, { useState } from 'react';\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown'; // for converting markdown link  to react code\r\n\r\nexport default function DisplayJob({ job }) {\r\n  // declaring state variable to open and close, means to show and hide details\r\n  const [open, setOpen] = useState(false) // open variable is closed first, as its by default value is given false here, it its true then, it will show the details\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted mb-2\">\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\r\n            <Badge variant=\"secondary\">{job.location}</Badge>\r\n            <div style={{ wordBreak: 'break-all' }}>\r\n             <ReactMarkdown source={job.how_to_apply} /> \r\n            </div>\r\n          </div>\r\n            {/* // for image section */}\r\n          <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\r\n        </div>\r\n        {/* // for view details section */}\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen(prevOpen => !prevOpen)}  \r\n            variant=\"primary\"\r\n          >\r\n              {/* // if open is true then Hide details, otherWise View details */}\r\n            {open ? 'Hide Details' : 'View Details'}\r\n          </Button>\r\n        </Card.Text>\r\n          {/* // to show and hide view details section */}\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n  function adjustPage(amount) {\r\n    setPage(prevPage => prevPage + amount)\r\n  }\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  )\r\n}","import React from 'react'\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nexport default function SearchJob({ params, onParamChange }) {\r\n  return (\r\n    <Form className=\"mb-4\">\r\n      <Form.Row className=\"align-items-end\">\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n          <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\" />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport FetchJobs from './FetchJobs';\r\nimport { Container } from 'react-bootstrap';\r\nimport DisplayJob from '../components/DisplayJob';\r\nimport JobsPagination from '../components/JobsPagination';\r\nimport SearchJob from '../components/SearchJob';\r\n\r\nfunction HomeComp() {\r\n  const [params, setParams] = useState({})\r\n  const [page, setPage] = useState(1)\r\n  const { jobs, loading, error, hasNextPage } = FetchJobs(params, page) // calling useFetchJobs\r\n\r\n  function handleParamChange(e) {\r\n    const param = e.target.name\r\n    const value = e.target.value\r\n    setPage(1)\r\n    setParams(prevParams => {\r\n      return { ...prevParams, [param]: value }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n    <Container className=\"my-4\">\r\n      <h1 className=\"mb-4\">Pro Jobs</h1>\r\n      <SearchJob params={params} onParamChange={handleParamChange} />\r\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\r\n      {/* // if loading, then h1 will printed */}\r\n      {loading && <h1>Loading...</h1>} \r\n      {/* // if error, then error will be printed */}\r\n      {error && <h1>Error. Try Refreshing.</h1>} \r\n      {jobs.map(job => {\r\n        return <DisplayJob key={job.id} job={job} />\r\n      })}\r\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\r\n    </Container>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeComp;","import React from 'react';\nimport HomeComp from './components/HomeComp';\n\nfunction App() {\nreturn (\n    <>\n    < HomeComp />\n    </>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}